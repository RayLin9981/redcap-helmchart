apiVersion: v1
kind: ConfigMap
metadata:
  name: redcap-backup-scripts
  labels:
    app.kubernetes.io/name: redcap-backup-job
    app.kubernetes.io/instance: redcap
data:
  backup.sh: |
    #!/bin/sh
    set -e
    DATE=$(date +%Y%m%d-%H%M%S)
    BACKUP_ROOT=/backup-data/${DATE}
    mkdir -p ${BACKUP_ROOT}

    echo "[1/3] 備份 REDCap 檔案..."
    cp -r /redcap ${BACKUP_ROOT}/redcap-app
    cp -r /edocs ${BACKUP_ROOT}/redcap-edocs

    echo "[2/3] 備份 MySQL 資料庫..."
    mkdir -p ${BACKUP_ROOT}/redcap-db
    mysqldump \
      --host=${DB_HOST} \
      --user=${DB_USER} \
      --password=${DB_PASSWD} \
      --databases ${DB_NAME} \
      --add-drop-database --column-statistics=0 -v \
      > ${BACKUP_ROOT}/redcap-db/${DB_NAME}-backup.sql

    echo "[3/3] 建立壓縮檔..."
    cd /backup-data
    tar czf redcap-backup-${DATE}.tar.gz ${DATE}
    rm -rf ${BACKUP_ROOT}

    echo "備份完成: /backup-data/redcap-backup-${DATE}.tar.gz"

  restore.sh: |
    #!/bin/sh
    set -e
    BACKUP_FILE=$1
    if [ -z "$BACKUP_FILE" ]; then
      echo "請提供要還原的備份檔路徑，例如：/backup-data/redcap-backup-20251030-000000.tar.gz"
      exit 1
    fi

    echo "解壓縮備份檔..."
    mkdir -p /restore-data
    tar xzf ${BACKUP_FILE} -C /restore-data
    RESTORE_DIR=$(ls /restore-data)

    echo "[1/3] 還原 REDCap 程式與檔案..."
    cp -r /restore-data/${RESTORE_DIR}/redcap-app/* /redcap/
    cp -r /restore-data/${RESTORE_DIR}/redcap-edocs/* /edocs/

    echo "[2/3] 還原資料庫..."
    mysql \
      --host=${DB_HOST} \
      --user=${DB_USER} \
      --password=${DB_PASSWD} \
      ${DB_NAME} < /restore-data/${RESTORE_DIR}/redcap-db/${DB_NAME}-backup.sql

    echo "[3/3] 清理暫存..."
    rm -rf /restore-data

    echo "✅ 還原完成"

