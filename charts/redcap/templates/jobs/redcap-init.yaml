{{- if .Values.redcap.install.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "redcap.initJob.fullname" . }}
  labels:
    {{- include "redcap.initJob.labels" . | nindent 4 }}
spec:
  backoffLimit: 10
  template:
    metadata:
      name: {{ include "redcap.initJob.fullname" . }}
      labels:
        {{- include "redcap.initJob.labels" . | nindent 8 }}
    spec:
      securityContext:
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: "OnRootMismatch"
        runAsNonRoot: true 

      {{- with .Values.redcap.install.initJob.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      initContainers:
        - name: redcap-install
          image: "{{ .Values.redcap.install.initJob.php.image.repository }}:{{ .Values.redcap.install.initJob.php.image.tag }}"
          imagePullPolicy: {{ .Values.redcap.install.initJob.php.image.pullPolicy }}

          resources:
            {{- toYaml .Values.redcap.install.initJob.php.resources | nindent 14 }}

          env:
            - name: SCRIPT_NAME
              value: /var/www/redcap/install.php
            - name: SCRIPT_FILENAME
              value: /var/www/redcap/install.php
            - name: QUERY_STRING
              value: auto=1
            - name: REQUEST_METHOD
              value: GET

          args:
            - "-bind"
            - "-connect"
            - "{{- include "redcap.serviceName" . }}:{{ .Values.services.redcap.port }}"

          securityContext:
            allowPrivilegeEscalation: false

      containers:
        - name: redcap-config
          image: "{{ .Values.redcap.install.initJob.mysql.image.repository }}:{{ .Values.redcap.install.initJob.mysql.image.tag }}"
          imagePullPolicy: {{ .Values.redcap.install.initJob.mysql.image.pullPolicy }}

          resources:
            {{- toYaml .Values.redcap.install.initJob.mysqlresources | nindent 14 }}

          env:
            - name: DB_PASSWD
              {{- if .Values.redcap.config.database.auth.password.secretKeyRef.name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redcap.config.database.auth.password.secretKeyRef.name }}
                  key: {{ .Values.redcap.config.database.auth.password.secretKeyRef.key }}
              {{- else }}
              value: {{ .Values.redcap.config.database.auth.password.value }}
              {{- end }}

          command:
            - "sh"
            - "-c"
            - "/tmp/redcap-config.sh"

          volumeMounts:
            - name: init-config-script
              mountPath: /tmp/redcap-config.sh
              subPath: redcap-config.sh

          securityContext:
            allowPrivilegeEscalation: false

      restartPolicy: OnFailure

      volumes:
      {{- if and (.Values.redcap.install.enabled) (empty .Values.redcap.install.overrideInstallContainer) }}
      - name: init-config-script
        configMap:
          name: {{ .Release.Name }}-init-install-script
          defaultMode: 0777
      {{- end }}
{{- end }}