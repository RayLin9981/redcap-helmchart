input { 

  jdbc {
    jdbc_driver_library => "/driver/mysql-connector-j-8.1.0.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://{{ .Values.redcap.config.database.auth.hostname }}:{{ default 3306 .Values.mysql.primary.service.ports.mysql }}/{{ .Values.redcap.config.database.auth.databaseName }}"
    jdbc_user => "{{ .Values.redcap.config.database.auth.username }}"
    jdbc_password => "{{ default .Values.redcap.config.database.auth.password `${MYSQL_PASSWD}` }}"
    schedule => "{{ .Values.audit.logsApi.config.pollingSchedule }}"
    last_run_metadata_path => "/bitnami/logstash/data/redcap-log-event-logstash_jdbc_last_run"
    use_column_value => true
    tracking_column_type => "numeric"
    tracking_column => "log_event_id"
    use_prepared_statements => true
    prepared_statement_name => "redcap-query-log-event"
    prepared_statement_bind_values => [":sql_last_value"]
    statement => "
      SELECT 
        rle.*,
        rp.project_name
      FROM
        redcap_log_event AS rle
      LEFT OUTER JOIN 
        redcap_projects AS rp
        ON  rp.project_id = rle.project_id
      WHERE
        rle.log_event_id > ?
    "
  }
}

filter { 
  mutate { 
    add_field => { "source_table" => "redcap_log_event" } 
  } 
} 

output {

  http {
    id => "redcap-log-event"
    ssl_verification_mode => "full"
    cacert => "{{ .Values.audit.logsApi.config.caPath }}"
    headers => [ "X-OVH-TOKEN", "${AUDIT_TOKEN}" ]
    url => "https://{{ .Values.audit.logsApi.config.host }}:{{ .Values.audit.logsApi.config.port }}"
    http_method => "post"
    retry_non_idempotent => true
    format => json_batch
    http_compression => true
  }
}