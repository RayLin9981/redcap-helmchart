apiVersion: batch/v1
kind: Job
metadata:
  name: redcap-db-restore
  labels:
    app.kubernetes.io/name: redcap-restore
    app.kubernetes.io/instance: redcap
    app.kubernetes.io/role: redcap-restore
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redcap-restore
        app.kubernetes.io/instance: redcap
    spec:
      restartPolicy: Never
      securityContext:
        runAsUser: 0
        runAsGroup: 2000
        fsGroup: 2000
      containers:
      - name: db-restore
        image: bitnamilegacy/mysql:9.3.0-debian-12-r1
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_PASSWD
          valueFrom:
            secretKeyRef:
              name: redcap-mysql
              key: mysql-password
        command:
        - "sh"
        - "-c"
        - |
          echo "Starting REDCap database restore..."
          if [ ! -f /nfs-backup/restore.sql ]; then
            echo "Error: /nfs-backup/restore.sql not found."
            exit 1
          fi
          mysql \
            --host=redcap-mysql \
            --database=redcap \
            --user=redcap \
            --password=${DB_PASSWD} \
            -v < /nfs-backup/restore.sql
          echo "Restore complete."
        resources:
          limits:
            cpu: "0.5"
            memory: 1Gi
          requests:
            cpu: "0.25"
            memory: 256Mi
        volumeMounts:
        - name: nfs-backup
          mountPath: /nfs-backup
      volumes:
      - name: nfs-backup
        nfs:
          server: nxfs.ntuh.gov.tw
          path: /Redcap/RedCapDBBackup

